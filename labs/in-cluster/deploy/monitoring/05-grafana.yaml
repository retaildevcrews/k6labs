apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus-service.monitoring.svc:8080",
                "version": 1,
                "uid": "1bbc5246-148a-4b09-a51b-348b05121d19"
            }
        ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-providers
  namespace: monitoring
  labels:
    app: grafana
data:
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - name: k6-dashboard
      folder: k6
      options:
        path: /var/lib/grafana/dashboards/k6-dashboard
      orgId: 1
      type: file
      disableDeletion: false
    - name: k6-official-dashboard
      folder: k6
      options:
        path: /var/lib/grafana/dashboards/k6-official-dashboard
      orgId: 1
      type: file
      disableDeletion: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 0
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.3.2
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - name: grafana-dashboard-providers
              mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
              subPath: dashboardproviders.yaml
            - name: k6-dashboard
              mountPath: /var/lib/grafana/dashboards/k6-dashboard
            - name: k6-official-dashboard
              mountPath: /var/lib/grafana/dashboards/k6-official-dashboard
      volumes:
        - name: grafana-pv
          hostPath:
            path: /grafana
        - name: grafana-datasources
          configMap:
              defaultMode: 420
              name: grafana-datasources
        - name: grafana-dashboard-providers
          configMap:
            name: grafana-dashboard-providers
        - name: k6-dashboard
          configMap:
            name: k6-dashboard
        - name: k6-official-dashboard
          configMap:
            name: k6-official-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  selector:
    app: grafana
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
      nodePort: 32000
